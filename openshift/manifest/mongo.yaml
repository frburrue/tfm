kind: Template
apiVersion: v1
metadata:
  name: mongo
  annotations:
    description: Template for mongo service
    tags: app,python
    iconClass: icon-openshift
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
objects:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - name: ${APPLICATION_NAME}
      port: 27017
      targetPort: 27017
    selector:
      deploymentConfig: ${APPLICATION_NAME}
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
    annotations:
      description: ${APPLICATION_DESCRIPTION}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    triggers: []
    strategy:
      type: ${DEPLOYMENT_STRATEGY}
      rollingParams:
        updatePeriodSeconds: "${{ROLLING_UPDATE_PERIOD}}"
        intervalSeconds: "${{ROLLING_INTERVAL}}"
        timeoutSeconds: "${{DEPLOYMENT_TIMEOUT}}"
        maxSurge: "${{ROLLING_MAX_SURGE}}"
        maxUnavailable: "${{ROLLING_MAX_UNAVAILABLE}}"
      recreateParams:
        timeoutSeconds: "${{DEPLOYMENT_TIMEOUT}}"
    replicas: "${{REPLICA_COUNT}}"
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          deploymentConfig: ${APPLICATION_NAME}
          app: ${APPLICATION_NAME}
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: francisco
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: francisco
          - name: MONGO_INITDB_DATABASE
            value: mlflow
          name: ${APPLICATION_NAME}
          image: ${SERVICE}:${VERSION}
          imagePullPolicy: Always
          ports:
          - name: ${APPLICATION_NAME}
            containerPort: 27017
            protocol: TCP
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - mountPath: /data/db
            name: mongo
        volumes:
        - name: mongo
          persistentVolumeClaim:
            claimName: mongo
parameters:
- name: APPLICATION_NAME
  description: "The name for the application."
  value: "mongo"
  required: true
- name: "SERVICE"
  description: "service ID."
  value: "mongo"
  required: true
- name: VERSION
  description: "Application version to deploy."
  value: "4.2.9"
  required: true
- name: DEPLOYMENT_STRATEGY
  description: "Deployment strategy to use. Values: Recreate, Rolling."
  value: "Rolling"
  required: true
- name: DEPLOYMENT_TIMEOUT
  description: "The time (in seconds) to wait for a scaling event before automatically rolling back to the previous complete deployment."
  value: "600"
  required: true
- name: ROLLING_UPDATE_PERIOD
  description: "The time to wait between individual Pod updates in seconds."
  value: "1"
- name: ROLLING_INTERVAL
  description: "The time to wait between polling the deployment status after update in seconds."
  value: "1"
- name: ROLLING_MAX_SURGE
  description: "The maximum number of Pods that can be scheduled above the original number of Pods expressed in percentage or number of replicas."
  value: "25%"
- name: ROLLING_MAX_UNAVAILABLE
  description: "The maximum number of Pods that can be unavailable during the update expressed in percentage or number of replicas."
  value: "20%"
- name: REPLICA_COUNT
  description: "Number of replicas to run."
  value: "1"
  required: true
- name: CPU_REQUEST
  description: "Minimum amount of CPU that the container may consume. Unit (m) has to be included."
  value: "1m"
  required: true
- name: CPU_LIMIT
  description: "Maximum amount of CPU that the container may consume. Unit (m) has to be included."
  value: "1000m"
  required: true
- name: MEMORY_REQUEST
  description: "Minimum amount of memory that the container may consume. Unit (Mi, Gi) has to be included."
  value: "1Mi"
  required: true
- name: MEMORY_LIMIT
  description: "Maximum amount of memory that the container may consume. Unit (Mi, Gi) has to be included."
  value: "512Mi"
  required: true
labels:
  template: tfm-template-mongo